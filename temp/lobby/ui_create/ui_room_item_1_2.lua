--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create Button_enter
local Button_enter = ccui.Button:create()
Button_enter:ignoreContentAdaptWithSize(false)
Button_enter:loadTextureNormal("lobby/resource/RoomList/2.png",0)
Button_enter:loadTexturePressed("lobby/resource/RoomList/2.png",0)
Button_enter:loadTextureDisabled("lobby/resource/RoomList/2.png",0)
Button_enter:setTitleFontSize(14)
Button_enter:setTitleColor({r = 65, g = 65, b = 70})
Button_enter:setScale9Enabled(true)
Button_enter:setCapInsets({x = 15, y = 11, width = 423, height = 572})
Button_enter:setLayoutComponentEnabled(true)
Button_enter:setName("Button_enter")
Button_enter:setTag(329)
Button_enter:setCascadeColorEnabled(true)
Button_enter:setCascadeOpacityEnabled(true)
Button_enter:setAnchorPoint(0.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Button_enter)
layout:setSize({width = 453.0000, height = 594.0000})
layout:setRightMargin(-453.0000)
layout:setTopMargin(-594.0000)
Node:addChild(Button_enter)

--Create Image_title
local Image_title = ccui.ImageView:create()
Image_title:ignoreContentAdaptWithSize(false)
Image_title:loadTexture("lobby/resource/RoomList/1_2.png",0)
Image_title:setLayoutComponentEnabled(true)
Image_title:setName("Image_title")
Image_title:setTag(330)
Image_title:setCascadeColorEnabled(true)
Image_title:setCascadeOpacityEnabled(true)
Image_title:setPosition(226.5000, 100.9800)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_title)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.1700)
layout:setPercentWidth(0.5541)
layout:setPercentHeight(0.1481)
layout:setSize({width = 251.0000, height = 88.0000})
layout:setLeftMargin(101.0000)
layout:setRightMargin(101.0000)
layout:setTopMargin(449.0200)
layout:setBottomMargin(56.9800)
Button_enter:addChild(Image_title)

--Create Text_Content
local Text_Content = ccui.Text:create()
Text_Content:ignoreContentAdaptWithSize(true)
Text_Content:setTextAreaSize({width = 0, height = 0})
Text_Content:setFontName("simhei.ttf")
Text_Content:setFontSize(24)
Text_Content:setString([[]])
Text_Content:setTextVerticalAlignment(1)
Text_Content:setLayoutComponentEnabled(true)
Text_Content:setName("Text_Content")
Text_Content:setTag(17)
Text_Content:setCascadeColorEnabled(true)
Text_Content:setCascadeOpacityEnabled(true)
Text_Content:setAnchorPoint(0.0000, 0.5000)
Text_Content:setPosition(117.7800, 219.7800)
layout = ccui.LayoutComponent:bindLayoutComponent(Text_Content)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.2600)
layout:setPositionPercentY(0.3700)
layout:setLeftMargin(117.7800)
layout:setRightMargin(335.2200)
layout:setTopMargin(374.2200)
layout:setBottomMargin(219.7800)
Button_enter:addChild(Text_Content)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

