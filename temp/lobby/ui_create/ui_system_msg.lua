--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create imgBj
local imgBj = ccui.ImageView:create()
imgBj:ignoreContentAdaptWithSize(false)
imgBj:loadTexture("lobby/resource/sysMessage/bg.png",0)
imgBj:setLayoutComponentEnabled(true)
imgBj:setName("imgBj")
imgBj:setTag(149)
imgBj:setCascadeColorEnabled(true)
imgBj:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(imgBj)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setSize({width = 1703.0000, height = 943.0000})
layout:setLeftMargin(-851.5000)
layout:setRightMargin(-851.5000)
layout:setTopMargin(-471.5000)
layout:setBottomMargin(-471.5000)
Node:addChild(imgBj)

--Create CheckBox_all
local CheckBox_all = ccui.CheckBox:create()
CheckBox_all:ignoreContentAdaptWithSize(false)
CheckBox_all:loadTextureBackGround("lobby/resource/sysMessage/qb1.png",0)
CheckBox_all:loadTextureFrontCross("lobby/resource/sysMessage/qb.png",0)
CheckBox_all:setSelected(true)
CheckBox_all:setLayoutComponentEnabled(true)
CheckBox_all:setName("CheckBox_all")
CheckBox_all:setTag(150)
CheckBox_all:setCascadeColorEnabled(true)
CheckBox_all:setCascadeOpacityEnabled(true)
CheckBox_all:setPosition(-620.2238, 420.0145)
layout = ccui.LayoutComponent:bindLayoutComponent(CheckBox_all)
layout:setSize({width = 98.0000, height = 42.0000})
layout:setLeftMargin(-669.2238)
layout:setRightMargin(571.2238)
layout:setTopMargin(-441.0145)
layout:setBottomMargin(399.0145)
Node:addChild(CheckBox_all)

--Create CheckBox_sys
local CheckBox_sys = ccui.CheckBox:create()
CheckBox_sys:ignoreContentAdaptWithSize(false)
CheckBox_sys:loadTextureBackGround("lobby/resource/sysMessage/xtxx1.png",0)
CheckBox_sys:loadTextureFrontCross("lobby/resource/sysMessage/xtxx.png",0)
CheckBox_sys:setLayoutComponentEnabled(true)
CheckBox_sys:setName("CheckBox_sys")
CheckBox_sys:setTag(151)
CheckBox_sys:setCascadeColorEnabled(true)
CheckBox_sys:setCascadeOpacityEnabled(true)
CheckBox_sys:setPosition(-240.0812, 420.0145)
layout = ccui.LayoutComponent:bindLayoutComponent(CheckBox_sys)
layout:setSize({width = 170.0000, height = 42.0000})
layout:setLeftMargin(-325.0812)
layout:setRightMargin(155.0812)
layout:setTopMargin(-441.0145)
layout:setBottomMargin(399.0145)
Node:addChild(CheckBox_sys)

--Create CheckBox_horm
local CheckBox_horm = ccui.CheckBox:create()
CheckBox_horm:ignoreContentAdaptWithSize(false)
CheckBox_horm:loadTextureBackGround("lobby/resource/sysMessage/lbxx1.png",0)
CheckBox_horm:loadTextureFrontCross("lobby/resource/sysMessage/lbxx.png",0)
CheckBox_horm:setLayoutComponentEnabled(true)
CheckBox_horm:setName("CheckBox_horm")
CheckBox_horm:setTag(152)
CheckBox_horm:setCascadeColorEnabled(true)
CheckBox_horm:setCascadeOpacityEnabled(true)
CheckBox_horm:setPosition(227.1898, 424.0091)
layout = ccui.LayoutComponent:bindLayoutComponent(CheckBox_horm)
layout:setSize({width = 170.0000, height = 42.0000})
layout:setLeftMargin(142.1898)
layout:setRightMargin(-312.1898)
layout:setTopMargin(-445.0091)
layout:setBottomMargin(403.0091)
Node:addChild(CheckBox_horm)

--Create btnHorm
local btnHorm = ccui.Button:create()
btnHorm:ignoreContentAdaptWithSize(false)
btnHorm:loadTextureNormal("lobby/resource/sysMessage/lab.png",0)
btnHorm:setTitleFontSize(14)
btnHorm:setTitleColor({r = 65, g = 65, b = 70})
btnHorm:setLayoutComponentEnabled(true)
btnHorm:setName("btnHorm")
btnHorm:setTag(153)
btnHorm:setCascadeColorEnabled(true)
btnHorm:setCascadeOpacityEnabled(true)
btnHorm:setPosition(680.0405, 420.0057)
layout = ccui.LayoutComponent:bindLayoutComponent(btnHorm)
layout:setSize({width = 137.0000, height = 99.0000})
layout:setLeftMargin(611.5405)
layout:setRightMargin(-748.5405)
layout:setTopMargin(-469.5057)
layout:setBottomMargin(370.5057)
Node:addChild(btnHorm)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

