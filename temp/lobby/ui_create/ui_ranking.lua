--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create imgBg
local imgBg = ccui.ImageView:create()
imgBg:ignoreContentAdaptWithSize(false)
imgBg:loadTexture("lobby/resource/hall_res/phb.png",0)
imgBg:setLayoutComponentEnabled(true)
imgBg:setName("imgBg")
imgBg:setTag(505)
imgBg:setCascadeColorEnabled(true)
imgBg:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(imgBg)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setSize({width = 1237.0000, height = 723.0000})
layout:setLeftMargin(-611.0000)
layout:setRightMargin(-611.0000)
layout:setTopMargin(-367.5000)
layout:setBottomMargin(-367.5000)
Node:addChild(imgBg)

--Create imgBg
local imgBgT = ccui.ImageView:create()
imgBgT:loadTexture("lobby/resource/rank/List_word.png",0)
imgBgT:setPosition(600,640)
imgBg:addChild(imgBgT)

--Create imgBg
local imgBg1 = ccui.ImageView:create()
imgBg1:loadTexture("lobby/resource/rank/Ranking_word.png",0)
imgBg1:setPosition(180,540)
imgBg:addChild(imgBg1)

--Create imgBg
local imgBg2 = ccui.ImageView:create()
imgBg2:loadTexture("lobby/resource/rank/Nickname_word.png",0)
imgBg2:setPosition(550,540)
imgBg:addChild(imgBg2)

--Create imgBg
local imgBg3 = ccui.ImageView:create()
imgBg3:loadTexture("lobby/resource/rank/Total_assets.png",0)
imgBg3:setPosition(950,540)
imgBg:addChild(imgBg3)

--Create btnClose
local btnClose = ccui.Button:create()
btnClose:ignoreContentAdaptWithSize(false)
btnClose:loadTextureNormal("lobby/resource/button/close.png",0)
btnClose:setTitleFontSize(14)
btnClose:setTitleColor({r = 65, g = 65, b = 70})
btnClose:setLayoutComponentEnabled(true)
btnClose:setName("btnClose")
btnClose:setTag(530)
btnClose:setCascadeColorEnabled(true)
btnClose:setCascadeOpacityEnabled(true)
btnClose:setPosition(580.0000, 285.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(btnClose)
layout:setSize({width = 80.0000, height = 80.0000})
layout:setLeftMargin(530.0000)
layout:setRightMargin(-630.0000)
layout:setTopMargin(-335.0000)
layout:setBottomMargin(235.0000)
Node:addChild(btnClose)

--Create PageViewRank
local PageViewRank = ccui.ListView:create()
PageViewRank:setDirection(1)
PageViewRank:setGravity(0)
PageViewRank:ignoreContentAdaptWithSize(false)
PageViewRank:setClippingEnabled(true)
PageViewRank:setBackGroundColorType(1)
PageViewRank:setBackGroundColor({r = 150, g = 150, b = 255})
PageViewRank:setBackGroundColorOpacity(0)
PageViewRank:setLayoutComponentEnabled(true)
PageViewRank:setName("PageViewRank")
PageViewRank:setTag(531)
PageViewRank:setCascadeColorEnabled(true)
PageViewRank:setCascadeOpacityEnabled(true)
PageViewRank:setAnchorPoint(0.5000, 0.5000)
PageViewRank:setPosition(0.0000, -90.0000)
--PageViewRank:setOpacity(0)
layout = ccui.LayoutComponent:bindLayoutComponent(PageViewRank)
layout:setPositionPercentXEnabled(true)
layout:setSize({width = 1141.0000, height = 460.0000})
layout:setLeftMargin(-570.5000)
layout:setRightMargin(-570.5000)
layout:setTopMargin(-162.9986)
layout:setBottomMargin(-285.0014)
Node:addChild(PageViewRank)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

