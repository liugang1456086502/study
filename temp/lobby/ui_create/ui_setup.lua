--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create imgBj
local imgBj = ccui.ImageView:create()
imgBj:ignoreContentAdaptWithSize(false)
imgBj:loadTexture("lobby/resource/hall_res/phb.png",0)
imgBj:setLayoutComponentEnabled(true)
imgBj:setName("imgBj")
imgBj:setTag(542)
imgBj:setCascadeColorEnabled(true)
imgBj:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(imgBj)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setSize({width = 1237.0000, height = 723.0000})
layout:setLeftMargin(-546.5000)
layout:setRightMargin(-546.5000)
layout:setTopMargin(-263.5000)
layout:setBottomMargin(-263.5000)
Node:addChild(imgBj)

local imgBjSetup = ccui.ImageView:create()
imgBjSetup:ignoreContentAdaptWithSize(false)
imgBjSetup:loadTexture("lobby/resource/setup/Setup.png",0)
imgBjSetup:setLayoutComponentEnabled(true)
imgBjSetup:setName("imgBjSetup")
imgBjSetup:setTag(542)
imgBjSetup:setCascadeColorEnabled(true)
imgBjSetup:setCascadeOpacityEnabled(true)
imgBjSetup:setPosition(618.5000, 648.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(imgBjSetup)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setSize({width = 176.0000, height = 71.0000})
layout:setLeftMargin(-546.5000)
layout:setRightMargin(-546.5000)
layout:setTopMargin(-263.5000)
layout:setBottomMargin(-263.5000)
imgBj:addChild(imgBjSetup)

--Create btnClose
local btnClose = ccui.Button:create()
btnClose:ignoreContentAdaptWithSize(false)
btnClose:loadTextureNormal("lobby/resource/button/close.png",0)
btnClose:setTitleFontSize(14)
btnClose:setTitleColor({r = 65, g = 65, b = 70})
btnClose:setLayoutComponentEnabled(true)
btnClose:setName("btnClose")
btnClose:setTag(533)
btnClose:setCascadeColorEnabled(true)
btnClose:setCascadeOpacityEnabled(true)
btnClose:setPosition(600.0000, 300.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(btnClose)
layout:setSize({width = 80.0000, height = 80.0000})
layout:setLeftMargin(470.0000)
layout:setRightMargin(-570.0000)
layout:setTopMargin(-240.0000)
layout:setBottomMargin(140.0000)
Node:addChild(btnClose)

--Create imgVoiceBg
local imgVoiceBg = ccui.ImageView:create()
imgVoiceBg:ignoreContentAdaptWithSize(false)
imgVoiceBg:loadTexture("lobby/resource/setup/yx.png",0)
imgVoiceBg:setLayoutComponentEnabled(true)
imgVoiceBg:setName("imgVoiceBg")
imgVoiceBg:setTag(538)
imgVoiceBg:setCascadeColorEnabled(true)
imgVoiceBg:setCascadeOpacityEnabled(true)
imgVoiceBg:setPosition(-195.0017, -87.0003)
layout = ccui.LayoutComponent:bindLayoutComponent(imgVoiceBg)
layout:setSize({width = 119.0000, height = 45.0000})
layout:setLeftMargin(-234.5017)
layout:setRightMargin(155.5017)
layout:setTopMargin(67.5003)
layout:setBottomMargin(-106.5003)
Node:addChild(imgVoiceBg)

--Create imgMusicBg
local imgMusicBg = ccui.ImageView:create()
imgMusicBg:ignoreContentAdaptWithSize(false)
imgMusicBg:loadTexture("lobby/resource/setup/yy.png",0)
imgMusicBg:setLayoutComponentEnabled(true)
imgMusicBg:setName("imgMusicBg")
imgMusicBg:setTag(539)
imgMusicBg:setCascadeColorEnabled(true)
imgMusicBg:setCascadeOpacityEnabled(true)
imgMusicBg:setPosition(-195.0017, 18.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(imgMusicBg)
layout:setSize({width = 119.0000, height = 45.0000})
layout:setLeftMargin(-234.5017)
layout:setRightMargin(155.5017)
layout:setTopMargin(-37.5000)
layout:setBottomMargin(-1.5000)
Node:addChild(imgMusicBg)

--Create CheckBox_musicOpen
local CheckBox_musicOpen = ccui.CheckBox:create()
CheckBox_musicOpen:ignoreContentAdaptWithSize(false)
CheckBox_musicOpen:loadTextureBackGround("lobby/resource/setup/Close.png",0)
CheckBox_musicOpen:loadTextureFrontCross("lobby/resource/setup/Open.png",0)
CheckBox_musicOpen:loadTextureFrontCrossDisabled("lobby/resource/setup/Open.png",0)
CheckBox_musicOpen:setSelected(true)
CheckBox_musicOpen:setLayoutComponentEnabled(true)
CheckBox_musicOpen:setName("CheckBox_musicOpen")
CheckBox_musicOpen:setTag(653)
CheckBox_musicOpen:setCascadeColorEnabled(true)
CheckBox_musicOpen:setCascadeOpacityEnabled(true)
CheckBox_musicOpen:setPosition(100, 17.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(CheckBox_musicOpen)
layout:setSize({width = 281.0000, height = 74.0000})
layout:setLeftMargin(-47.5034)
layout:setRightMargin(-7.4966)
layout:setTopMargin(-45.4998)
layout:setBottomMargin(-9.5002)
Node:addChild(CheckBox_musicOpen)

--Create CheckBox_voiceOpen
local CheckBox_voiceOpen = ccui.CheckBox:create()
CheckBox_voiceOpen:ignoreContentAdaptWithSize(false)
CheckBox_voiceOpen:loadTextureBackGround("lobby/resource/setup/Close.png",0)
CheckBox_voiceOpen:loadTextureFrontCross("lobby/resource/setup/Open.png",0)
CheckBox_voiceOpen:loadTextureFrontCrossDisabled("lobby/resource/setup/Open.png",0)
CheckBox_voiceOpen:setSelected(true)
CheckBox_voiceOpen:setLayoutComponentEnabled(true)
CheckBox_voiceOpen:setName("CheckBox_voiceOpen")
CheckBox_voiceOpen:setTag(657)
CheckBox_voiceOpen:setCascadeColorEnabled(true)
CheckBox_voiceOpen:setCascadeOpacityEnabled(true)
CheckBox_voiceOpen:setPosition(100.0000, -87.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(CheckBox_voiceOpen)
layout:setSize({width = 281.0000, height = 74.0000})
layout:setLeftMargin(-47.5034)
layout:setRightMargin(-7.4966)
layout:setTopMargin(59.5008)
layout:setBottomMargin(-114.5008)
Node:addChild(CheckBox_voiceOpen)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

