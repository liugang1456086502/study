--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create imgBj
local imgBj = ccui.ImageView:create()
imgBj:ignoreContentAdaptWithSize(false)
imgBj:loadTexture("game/baccarat_std/resource/image/loadingmap.png",0)
imgBj:setLayoutComponentEnabled(true)
imgBj:setName("imgBj")
imgBj:setTag(221)
imgBj:setCascadeColorEnabled(true)
imgBj:setCascadeOpacityEnabled(true)
imgBj:setPosition(0.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(imgBj)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setSize(cc.size(1920.0000, 1080.0000))
layout:setLeftMargin(-960.0000)
layout:setRightMargin(-960.0000)
layout:setTopMargin(-540.0000)
layout:setBottomMargin(-540.0000)
Node:addChild(imgBj)

--Create imgLoadingBj
local imgLoadingBj = ccui.ImageView:create()
imgLoadingBj:ignoreContentAdaptWithSize(false)
imgLoadingBj:loadTexture("game/baccarat_std/resource/image/ldtbj.png",0)
imgLoadingBj:setLayoutComponentEnabled(true)
imgLoadingBj:setName("imgLoadingBj")
imgLoadingBj:setTag(223)
imgLoadingBj:setCascadeColorEnabled(true)
imgLoadingBj:setCascadeOpacityEnabled(true)
imgLoadingBj:setPosition(35.0000, -400.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(imgLoadingBj)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setSize(cc.size(1439.0000, 95.0000))
layout:setLeftMargin(-684.5000)
layout:setRightMargin(-754.5000)
layout:setTopMargin(352.5000)
layout:setBottomMargin(-447.5000)
Node:addChild(imgLoadingBj)

--Create LoadingBar_Bj
local LoadingBar_Bj = ccui.LoadingBar:create()
LoadingBar_Bj:loadTexture("game/baccarat_std/resource/image/ldt.png",0)
LoadingBar_Bj:ignoreContentAdaptWithSize(false)
LoadingBar_Bj:setLayoutComponentEnabled(true)
LoadingBar_Bj:setName("LoadingBar_Bj")
LoadingBar_Bj:setTag(222)
LoadingBar_Bj:setCascadeColorEnabled(true)
LoadingBar_Bj:setCascadeOpacityEnabled(true)
LoadingBar_Bj:setPosition(35.0000, -400.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(LoadingBar_Bj)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setSize(cc.size(1439.0000, 95.0000))
layout:setLeftMargin(-684.5000)
layout:setRightMargin(-754.5000)
layout:setTopMargin(352.5000)
layout:setBottomMargin(-447.5000)
Node:addChild(LoadingBar_Bj)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

