--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create sprBack
local sprBack = cc.Sprite:create("game/ddz_match_std/resource/image/waitBj.png")
sprBack:setName("sprBack")
sprBack:setTag(83)
sprBack:setCascadeColorEnabled(true)
sprBack:setCascadeOpacityEnabled(true)
sprBack:setPosition(0.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(sprBack)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setSize(cc.size(1335.0000, 446.0000))
layout:setLeftMargin(-667.5000)
layout:setRightMargin(-667.5000)
layout:setTopMargin(-223.0000)
layout:setBottomMargin(-223.0000)
Node:addChild(sprBack)

--Create fntTableNum
local fntTableNum = ccui.TextBMFont:create()
fntTableNum:setFntFile("game/ddz_match_std/resource/number/surplusTable.fnt")
fntTableNum:setString([[3]])
fntTableNum:setLayoutComponentEnabled(true)
fntTableNum:setName("fntTableNum")
fntTableNum:setTag(85)
fntTableNum:setCascadeColorEnabled(true)
fntTableNum:setCascadeOpacityEnabled(true)
fntTableNum:setPosition(-150.2712, 46.1513)
layout = ccui.LayoutComponent:bindLayoutComponent(fntTableNum)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setSize(cc.size(36.0000, 46.0000))
layout:setLeftMargin(-168.2712)
layout:setRightMargin(132.2712)
layout:setTopMargin(-69.1513)
layout:setBottomMargin(23.1513)
Node:addChild(fntTableNum)

--Create nodeBall
local nodeBall=cc.Node:create()
nodeBall:setName("nodeBall")
nodeBall:setTag(45)
nodeBall:setCascadeColorEnabled(true)
nodeBall:setCascadeOpacityEnabled(true)
nodeBall:setPosition(0.0000, -88.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(nodeBall)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setLeftMargin(0.0000)
layout:setRightMargin(0.0000)
layout:setTopMargin(88.0000)
layout:setBottomMargin(-88.0000)
Node:addChild(nodeBall)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

