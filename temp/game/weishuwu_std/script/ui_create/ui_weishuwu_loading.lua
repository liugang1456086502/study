--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create Img_Bg
local Img_Bg = ccui.ImageView:create()
Img_Bg:ignoreContentAdaptWithSize(false)
Img_Bg:loadTexture("game/weishuwu_std/resource/image/start.jpg",0)
Img_Bg:setLayoutComponentEnabled(true)
Img_Bg:setName("Img_Bg")
Img_Bg:setTag(24)
Img_Bg:setCascadeColorEnabled(true)
Img_Bg:setCascadeOpacityEnabled(true)
Img_Bg:setPosition(0.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Img_Bg)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setSize(cc.size(1920.0000, 1080.0000))
layout:setLeftMargin(-960.0000)
layout:setRightMargin(-960.0000)
layout:setTopMargin(-540.0000)
layout:setBottomMargin(-540.0000)
Node:addChild(Img_Bg)

--Create LoadingBg
local LoadingBg = ccui.ImageView:create()
LoadingBg:ignoreContentAdaptWithSize(false)
LoadingBg:loadTexture("game/weishuwu_std/resource/image/loadingbg.png",0)
LoadingBg:setLayoutComponentEnabled(true)
LoadingBg:setName("LoadingBg")
LoadingBg:setTag(26)
LoadingBg:setCascadeColorEnabled(true)
LoadingBg:setCascadeOpacityEnabled(true)
LoadingBg:setPosition(-10.0000, -395.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(LoadingBg)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setSize(cc.size(1168.0000, 62.0000))
layout:setLeftMargin(-594.0000)
layout:setRightMargin(-574.0000)
layout:setTopMargin(364.0000)
layout:setBottomMargin(-426.0000)
Node:addChild(LoadingBg)

--Create LoadingBar
local LoadingBar = ccui.LoadingBar:create()
LoadingBar:loadTexture("game/weishuwu_std/resource/image/loading.png",0)
LoadingBar:ignoreContentAdaptWithSize(false)
LoadingBar:setLayoutComponentEnabled(true)
LoadingBar:setName("LoadingBar")
LoadingBar:setTag(25)
LoadingBar:setCascadeColorEnabled(true)
LoadingBar:setCascadeOpacityEnabled(true)
LoadingBar:setPosition(-9.9999, -394.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(LoadingBar)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setSize(cc.size(1168.0000, 62.0000))
layout:setLeftMargin(-593.9999)
layout:setRightMargin(-574.0001)
layout:setTopMargin(363.0000)
layout:setBottomMargin(-425.0000)
Node:addChild(LoadingBar)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

