--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create rollCon
local rollCon=cc.Node:create()
rollCon:setName("rollCon")
rollCon:setTag(70)
rollCon:setCascadeColorEnabled(true)
rollCon:setCascadeOpacityEnabled(true)
rollCon:setPosition(0.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(rollCon)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setLeftMargin(0.0000)
layout:setRightMargin(0.0000)
layout:setTopMargin(0.0000)
layout:setBottomMargin(0.0000)
Node:addChild(rollCon)

--Create imgBack
local imgBack = cc.Sprite:create("game/shuihu_std/resource/image/BG_2.png")
imgBack:setName("imgBack")
imgBack:setTag(71)
imgBack:setCascadeColorEnabled(true)
imgBack:setCascadeOpacityEnabled(true)
imgBack:setAnchorPoint(0.0000, 0.0000)
imgBack:setPosition(0.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(imgBack)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setSize(cc.size(1920.0000, 1080.0000))
layout:setLeftMargin(0.0000)
layout:setRightMargin(-46.0000)
layout:setTopMargin(-46.0000)
layout:setBottomMargin(0.0000)
Node:addChild(imgBack)

--Create fntOwnChips
local fntOwnChips = ccui.TextAtlas:create([[12345]],
													"game/shuihu_std/resource/number/S_tips_win.png",
													28,
													40,
													"0")
fntOwnChips:setLayoutComponentEnabled(true)
fntOwnChips:setName("fntOwnChips")
fntOwnChips:setTag(72)
fntOwnChips:setCascadeColorEnabled(true)
fntOwnChips:setCascadeOpacityEnabled(true)
fntOwnChips:setAnchorPoint(0.0000, 0.5000)
fntOwnChips:setPosition(434.0000, 242.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(fntOwnChips)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setSize(cc.size(140.0000, 40.0000))
layout:setLeftMargin(434.0000)
layout:setRightMargin(-602.0000)
layout:setTopMargin(-251.0000)
layout:setBottomMargin(233.0000)
Node:addChild(fntOwnChips)

--Create fntTotalWin
local fntTotalWin = ccui.TextAtlas:create([[12345]],
													"game/shuihu_std/resource/number/S_tips_win.png",
													28,
													40,
													"0")
fntTotalWin:setLayoutComponentEnabled(true)
fntTotalWin:setName("fntTotalWin")
fntTotalWin:setTag(73)
fntTotalWin:setCascadeColorEnabled(true)
fntTotalWin:setCascadeOpacityEnabled(true)
fntTotalWin:setAnchorPoint(0.0000, 0.5000)
fntTotalWin:setPosition(829.0000, 242.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(fntTotalWin)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setSize(cc.size(140.0000, 40.0000))
layout:setLeftMargin(829.0000)
layout:setRightMargin(-997.0000)
layout:setTopMargin(-251.0000)
layout:setBottomMargin(233.0000)
Node:addChild(fntTotalWin)

--Create fntCurWin
local fntCurWin = ccui.TextAtlas:create([[1234]],
													"game/shuihu_std/resource/number/S_tips_win.png",
													28,
													40,
													"0")
fntCurWin:setLayoutComponentEnabled(true)
fntCurWin:setName("fntCurWin")
fntCurWin:setTag(74)
fntCurWin:setCascadeColorEnabled(true)
fntCurWin:setCascadeOpacityEnabled(true)
fntCurWin:setAnchorPoint(0.0000, 0.5000)
fntCurWin:setPosition(1221.0000, 242.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(fntCurWin)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setSize(cc.size(112.0000, 40.0000))
layout:setLeftMargin(1221.0000)
layout:setRightMargin(-1361.0000)
layout:setTopMargin(-262.0000)
layout:setBottomMargin(222.0000)
Node:addChild(fntCurWin)

--Create fntCount
local fntCount = ccui.TextAtlas:create([[3]],
													"game/shuihu_std/resource/number/S_tips_win.png",
													28,
													40,
													"0")
fntCount:setLayoutComponentEnabled(true)
fntCount:setName("fntCount")
fntCount:setTag(75)
fntCount:setCascadeColorEnabled(true)
fntCount:setCascadeOpacityEnabled(true)
fntCount:setAnchorPoint(0.0000, 0.5000)
fntCount:setPosition(837.4100, 583.8900)
layout = ccui.LayoutComponent:bindLayoutComponent(fntCount)
layout:setPositionPercentX(0.0000)
layout:setPositionPercentY(0.0000)
layout:setSize(cc.size(28.0000, 40.0000))
layout:setLeftMargin(837.4100)
layout:setRightMargin(-1005.4100)
layout:setTopMargin(-592.8900)
layout:setBottomMargin(574.8900)
Node:addChild(fntCount)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

